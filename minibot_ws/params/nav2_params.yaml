amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_footprint"
    # beam_skip_distance: 0.5
    beam_skip_distance: 0.2
    # beam_skip_error_threshold: 0.9
    beam_skip_error_threshold: 0.8
    beam_skip_threshold: 0.3
    # do_beamskip: false
    do_beamskip: true
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 10.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan
    set_initial_pose: true
    initial_pose: [0, 0, 0]

bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: odom
    bt_loop_duration: 10
    default_server_timeout: 20
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    # default_bt_xml_filename: nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_goal_updated_controller_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.11
      movement_time_allowance: 10.0

    # Goal checker parameters
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.1
      yaw_goal_tolerance: 0.1

    # Vector Pursuit Controller parameters
    FollowPath:
    # VectorPursuitController:
      plugin: "vector_pursuit_controller::VectorPursuitController"
      k: 6.0
      # desired_linear_vel: 0.5
      # desired_linear_vel: 0.2
      desired_linear_vel: 0.5
      # min_turning_radius: 0.25
      # min_turning_radius: 0.4
      min_turning_radius: 0.2
      # lookahead_dist: 1.0
      # min_lookahead_dist: 0.4
      # max_lookahead_dist: 1.5
      lookahead_dist: 0.75
      min_lookahead_dist: 0.2
      max_lookahead_dist: 0.75
      lookahead_time: 1.5
      # rotate_to_heading_angular_vel: 0.5
      # rotate_to_heading_angular_vel: 0.3
      rotate_to_heading_angular_vel: 0.5
      # transform_tolerance: 0.1
      transform_tolerance: 0.05
      use_velocity_scaled_lookahead_dist: false
      # use_velocity_scaled_lookahead_dist: true
      min_linear_velocity: 0.0
      # min_approach_linear_velocity: 0.05
      # min_approach_linear_velocity: 0.0
      min_approach_linear_velocity: 0.05
      # approach_velocity_scaling_dist: 0.5
      approach_velocity_scaling_dist: 0.3
      # max_allowed_time_to_collision_up_to_target: 1.0
      max_allowed_time_to_collision_up_to_target: 1.0
      use_collision_detection: true
      # use_cost_regulated_linear_velocity_scaling: true
      use_cost_regulated_linear_velocity_scaling: false
      # cost_scaling_dist: 0.5
      cost_scaling_dist: 0.3
      # cost_scaling_gain: 1.0
      cost_scaling_gain: 1.2
      # inflation_cost_scaling_factor: 3.0
      inflation_cost_scaling_factor: 2.0
      use_rotate_to_heading: true
      allow_reversing: false
      # allow_reversing: true
      # rotate_to_heading_min_angle: 0.5
      rotate_to_heading_min_angle: 0.3
      # max_angular_accel: 3.0
      max_angular_accel: 0.2
      # max_linear_accel: 2.0
      max_linear_accel: 0.5
      max_lateral_accel: 0.3
      # max_robot_pose_search_dist: 10.0
      max_robot_pose_search_dist: 5.0
      use_interpolation: true
      # use_heading_from_path: false
      use_heading_from_path: true

    # # DWB parameters
    # FollowPath:
    #   plugin: "dwb_core::DWBLocalPlanner"
    #   debug_trajectory_details: True
    #   min_vel_x: 0.0
    #   min_vel_y: 0.0
    #   # max_vel_x: 0.3
    #   max_vel_x: 0.1
    #   max_vel_y: 0.0
    #   # max_vel_theta: 1.5
    #   max_vel_theta: 0.3
    #   min_speed_xy: 0.0
    #   # max_speed_xy: 0.5
    #   max_speed_xy: 0.1
    #   min_speed_theta: 0.0
    #   # Add high threshold velocity for turtlebot 3 issue.
    #   # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/7
    #   # acc_lim_x: 0.8
    #   # acc_lim_y: 0.0
    #   # acc_lim_theta: 2.0
    #   acc_lim_x: 0.2
    #   acc_lim_y: 0.0
    #   # acc_lim_theta: 0.8
    #   acc_lim_theta: 0.5
    #   decel_lim_x: -0.5
    #   decel_lim_y: 0.0
    #   decel_lim_theta: -2.0
    #   vx_samples: 20
    #   vy_samples: 5
    #   vtheta_samples: 20
    #   sim_time: 1.1  # 여기 고치면 costmap 문제 해결될수도 있음
    #   linear_granularity: 0.05
    #   angular_granularity: 0.025
    #   transform_tolerance: 0.2
    #   # xy_goal_tolerance: 0.25
    #   xy_goal_tolerance: 0.05
    #   # trans_stopped_velocity: 0.25  # 로봇이 정지한 것으로 간주되는 병진 속도를 정의
    #   trans_stopped_velocity: 0.25
    #   short_circuit_trajectory_evaluation: True
    #   stateful: True
    #   critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
    #   # BaseObstacle.scale: 0.02
    #   BaseObstacle.scale: 0.02
    #   PathAlign.scale: 32.0
    #   PathAlign.scale: 32.0
    #   PathAlign.forward_point_distance: 0.1
    #   # PathAlign.forward_point_distance: 0.5
    #   # GoalAlign.scale: 24.0
    #   GoalAlign.scale: 24.0
    #   GoalAlign.forward_point_distance: 0.1
    #   PathDist.scale: 32.0
    #   # GoalDist.scale: 24.0
    #   GoalDist.scale: 10.0
    #   RotateToGoal.scale: 32.0
    #   RotateToGoal.slowing_factor: 5.0
    #   RotateToGoal.lookahead_time: -1.0


local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0
      publish_frequency: 5.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: True
      rolling_window: true
      width: 2
      height: 2
      resolution: 0.02
      footprint: '[[0.05, 0.11], [0.05, -0.11], [-0.14, -0.11], [-0.14, 0.11]]'
      # footprint: '[[0.11, 0.085], [0.11, -0.085], [-0.11, -0.085], [-0.11, 0.085]]'
      plugins: ["obstacle_layer", "voxel_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer" 
        enabled: true
        observation_sources: virtual_scan
        virtual_scan:
          topic: /virtual_scan
          max_obstacle_height: 2.0
          clearing: true
          marking: true

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.0
        inflation_radius: 0.06

      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.02
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 5.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 5.0 # LSH
      publish_frequency: 2.0 # LSH
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: True
      # robot_radius: 0.14
      resolution: 0.02
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 5.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.0
        inflation_radius: 0.05
      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: True
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_smac_planner/SmacPlanner2D"
      # tolerance: 0.2
      tolerance: 0.3
      downsample_costmap: false
      downsampling_factor: 1
      allow_unknown: true
      max_iterations: 1000000
      max_on_approach_iterations: 1000
      # max_planning_time: 3.5
      max_planning_time: 3.0
      # cost_travel_multiplier: 2.0
      cost_travel_multiplier: 1.0
      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10

smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    global_frame: odom
    robot_base_frame: base_footprint
    transform_tolerance: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      # waypoint_pause_duration: 200
      waypoint_pause_duration: 10

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "CLOSED_LOOP"
    # max_velocity: [1.0, 0.0, 1.0]
    max_velocity: [0.5, 0.0, 0.5]
    min_velocity: [-0.5, 0.0, -0.5]
    # max_accel: [1.8, 0.0, 2.0]
    # max_decel: [-1.8, 0.0, -2.0]
    max_accel: [0.5, 0.0, 0.5]
    max_decel: [-0.2, 0.0, -0.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.05, 0.0, 0.05]
    velocity_timeout: 1.0